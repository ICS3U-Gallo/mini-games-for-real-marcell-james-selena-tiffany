import random
import sys
import pygame


pygame.init()

WIDTH = 640
HEIGHT = 480
SIZE = (WIDTH, HEIGHT)
GROUND_LEVEL = HEIGHT - 150

screen = pygame.display.set_mode(SIZE)
clock = pygame.time.Clock()
fps = 1000


beckground = pygame.image.load("background.png")
ground = pygame.image.load("ground.png")
ground1 = pygame.transform.scale(ground, (700, 137))
pipe_gap = 120
pipe_frequency = 2000
latest_pipe = pygame.time.get_ticks() - pipe_frequency
ground_scroll = 0
scroll_speed = 5
cannon_speed = 5


# ---------------------------
# Initialize global variables

game_over = False
if game_over == True:
    sys.exit()

class Clown(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("cloonie.png")
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]
        self.gravity = 0.5
        self.jump = -10
        self.velocity = 0
    def update(self):
        self.velocity += self.gravity
        self.rect.y += self.velocity
        if self.rect.bottom < 350:
            self.rect.y = 350
            self.velocity = 0
    def jump(self):
        self.velocity = self.jump
        if event.key == pygame.K_SPACE:
            cloonie.jump()

class Pipe(pygame.sprite.Sprite):
    def __init__(self, x, y, position):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("cannono.png")
        self.rect = self.image.get_rect()
        if position == 1:
            self.image = pygame.transform.flip(self.image, False, True)
            self.rect.bottomleft = [x, y - int(pipe_gap)]
        if position == -1:
            self.rect.topleft = [x, y]
    def update(self):
        self.rect.x -= cannon_speed
        if self.rect.height < 0:
            self.kill()

pipe_group = pygame.sprite.Group()
clown_group = pygame.sprite.Group()

cloonie = Clown(100, int(HEIGHT / 2))
clown_group.add(cloonie)

# ---------------------------

running = True
while running:

    clock.tick(fps)

    # EVENT HANDLING
    

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            print(event)

    if pygame.sprite.groupcollide(clown_group, pipe_group, False, False):
        game_over = True

    time_now = pygame.time.get_ticks()
    if time_now - latest_pipe > pipe_frequency:
        pipe_height = random.randint(-100, 75) 
        btm_pipe = Pipe(WIDTH, int(HEIGHT / 2) + pipe_height, -1)
        top_pipe = Pipe(WIDTH, int(HEIGHT / 2) + pipe_height, 1)
        pipe_group.add(btm_pipe)
        pipe_group.add(top_pipe)
        latest_pipe = time_now
    

    # GAME STATE UPDATES

    # All game math and comparisons happen here

    # DRAWING
    screen.fill((255, 255, 255))  # always the first drawing command
    #background
    screen.blit(beckground, (0, 0))
    #circus cannon
    pipe_group.draw(screen)
    pipe_group.update()

    #background and scroll
    screen.blit(ground1, (ground_scroll, 350))
    ground_scroll -= scroll_speed
    if abs(ground_scroll) > 60:
        ground_scroll = 0
    #clown
    clown_group.draw(screen)


    
    # Must be the last two lines
    # of the game loop
    pygame.display.flip()
    clock.tick(30)
    #---------------------------


pygame.quit()
