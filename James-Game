import random
import sys
import pygame


pygame.init()

WIDTH = 640
HEIGHT = 480
SIZE = (WIDTH, HEIGHT)
GROUND_LEVEL = HEIGHT - 150

screen = pygame.display.set_mode(SIZE)
clock = pygame.time.Clock()
fps = 120

#font
font = pygame.font.Font(None, 20)

#game variables
game_over = False
win = False
ground_scroll = 0
scroll_speed = 5
cannon_speed = 5
pipe_gap = 120
pipe_frequency = 2500
latest_pipe = pygame.time.get_ticks() - pipe_frequency

#images
beckground = pygame.image.load("background.png")
ground = pygame.image.load("ground.png")
ground1 = pygame.transform.scale(ground, (700, 137))
button = pygame.image.load("button.png")
button_rect = button.get_rect()
circus = pygame.image.load("circus.png")

#text
text_surface = font.render("Survive for 60 seconds to win!", True, (255, 0, 0))
text_rect = text_surface.get_rect()
text_rect.bottomleft = [20, 460]

font = pygame.font.Font(None, 72)

#timer
you_win = pygame.time.get_ticks()

#list
raindrops = []

#reset button
pos = pygame.mouse.get_pos()

#defining variables & classes
def reset_game():
    pipe_group.empty()
    cloonie.rect.x = 100
    cloonie.rect.y = int(HEIGHT / 2)

class Clown(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("cloonie.png")
        self.rect = self.image.get_rect()
        self.rect.center = [x, y]   
        self.vel = 0
        self.clicked = False
    def update(self):
        if game_over == False:
        #gravity
            self.vel += 0.5
            if self.vel > 7:
                self.vel = 7
            if self.rect.bottom <= 350:
                self.rect.y += int(self.vel)
            #jump
            if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
                self.clicked = True
                self.vel = -9
            if pygame.mouse.get_pressed()[0] == 0:
                self.clicked = False
        else:
            self.vel = 8
            if self.rect.bottom < 350:
                self.rect.y += int(self.vel)
            if self.rect.bottom > 350:
                self.rect.bottom = 349
        #top border
        if self.rect.top < -5:
            self.rect.top = -5


class Pipe(pygame.sprite.Sprite):
    def __init__(self, x, y, position):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load("cannono.png")
        self.rect = self.image.get_rect()
        if position == 1:
            self.image = pygame.transform.flip(self.image, False, True)
            self.rect.bottomleft = [x, y - int(pipe_gap)]
        if position == -1:
            self.rect.topleft = [x, y]
    def update(self):
        self.rect.x -= cannon_speed
        if self.rect.right < 0:
            self.kill()

def create_raindrops(num_drops):
    for _ in range(num_drops):
        x = random.randint(0, WIDTH)
        y = random.randint(-HEIGHT, 0)
        raindrops.append([x, y])

def display_win_screen():
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            
        screen.fill((255, 255, 255))

        win_text = font.render("You Win!", True, (0, 255, 0))
        win_rect = win_text.get_rect(center=(WIDTH // 2, HEIGHT // 2))
        screen.blit(win_text, win_rect)


        # Update the display
        pygame.display.flip()
        clock.tick(30)

create_raindrops(100)

pipe_group = pygame.sprite.Group()
clown_group = pygame.sprite.Group()

cloonie = Clown(100, int(HEIGHT / 2))
clown_group.add(cloonie)



running = True
while running:

    clock.tick(fps)

    # EVENT HANDLING
    

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
    
    if win == True:
        display_win_screen()


    #pipes
    time_now = pygame.time.get_ticks()
    if time_now - latest_pipe > pipe_frequency:
        pipe_height = random.randint(-90, 75) 
        btm_pipe = Pipe(WIDTH, int(HEIGHT / 2) + pipe_height, -1)
        top_pipe = Pipe(WIDTH, int(HEIGHT / 2) + pipe_height, 1)
        pipe_group.add(btm_pipe)
        pipe_group.add(top_pipe)
        latest_pipe = time_now

    # DRAWING
    screen.fill((255, 255, 255))  # always the first drawing command
    #background
    screen.blit(beckground, (0, 0))
    #raindrops
    if game_over == False:
        for drop in raindrops:
            drop[1] += 5
            pygame.draw.line(screen, (82, 178, 191), (drop[0], drop[1]), (drop[0], drop[1] + 10), 2)

            if drop[1] > HEIGHT:
                drop[1] = random.randint(-20, 0)
                drop[0] = random.randint(0, WIDTH)
    #circus
    screen.blit(circus, (0, 270))
    #fences!
    pygame.draw.rect(screen, (213, 186, 152), (0, 300, WIDTH, 10))
    pygame.draw.rect(screen, (213, 186, 152), (0, 325, WIDTH, 10))
    for i in range(0, WIDTH, 35):
        pygame.draw.rect(screen, (213, 186, 152), (i, 290, 10, 60))
        pygame.draw.circle(screen, (213, 186, 152), (i + 5, 290), 5)
    
    #circus cannon
    pipe_group.draw(screen)
    if game_over == False:
        pipe_group.update()
    #background and scroll
    screen.blit(ground1, (ground_scroll, 350))
    if game_over == False:
        ground_scroll -= scroll_speed
        if abs(ground_scroll) > 60:
            ground_scroll = 0
    #text
    screen.blit(text_surface, text_rect)
    #clown
    clown_group.draw(screen)
    clown_group.update()
    #button
    if game_over == True:
        screen.blit(button, (WIDTH // 2 - 50, HEIGHT // 2 - 75))
        if button_rect.collidepoint(pos):
            if pygame.mouse.get_pressed()[0] == 1:
                reset_game()
                game_over = False
    
    if pygame.time.get_ticks() - you_win >= 10000:
        win = True

    if pygame.sprite.groupcollide(clown_group, pipe_group, False, False):
        game_over = True

    # Must be the last two lines
    # of the game loop
    pygame.display.flip()
    clock.tick(30)
    #---------------------------


pygame.quit()
